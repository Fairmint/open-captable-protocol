generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// * PRIMARY OBJECTS: Links to validation schemas live under ocf repo schema/objects
model Issuer {
    id                               String   @id @default(uuid()) @map("_id")
    object_type                      String   @default("ISSUER")
    legal_name                       String
    dba                              String?
    formation_date                   String // OCF Date type is a string
    country_of_formation             String
    country_subdivision_of_formation String
    tax_ids                          Json[]
    email                            Json?
    phone                            Json?
    address                          Json?
    initial_shares_authorized        String?
    comments                         String[]
}

model Stakeholder {
    id                   String                       @id @default(uuid()) @map("_id")
    object_type          String                       @default("STAKEHOLDER")
    name                 Json
    stakeholder_type     String
    issuer_assigned_id   String?
    current_relationship String?
    primary_contact      Json?
    contact_info         Json?
    comments             String[]
}

model StockClass {
    id                              String         @id @default(uuid()) @map("_id")
    object_type                     String         @default("STOCK_CLASS")
    name                            String
    class_type                      String
    default_id_prefix               String
    initial_shares_authorized       String
    board_approval_date             String?
    votes_per_share                 String
    par_value                       Json?
    price_per_share                 Json?
    seniority                       String
    conversion_rights               Json?
    liquidation_preference_multiple String?
    participation_cap_multiple      String?
    comments                        String[]
}

model StockLegendTemplate {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("STOCK_LEGEND_TEMPLATE")
    name        String
    text        String
    comments    String[]
}

model StockPlan {
    id                            String   @id @default(uuid()) @map("_id")
    object_type                   String   @default("STOCK_PLAN")
    plan_name                     String
    board_approval_date           String?
    stockholder_approval_date     String?
    initial_shares_reserved       String
    default_cancellation_behavior String?
    stock_class_id                String
    comments                      String[]
}

model Valuations {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("VALUATION")
    provider            String?
    board_approval_date String?
    price_per_share     Json
    effective_date      String
    stock_class_id      String
    valuation_type      String
    comments            String[]
}

model VestingTerms {
    id                 String         @id @default(uuid()) @map("_id")
    object_type        String         @default("VESTING_TERMS")
    name               String
    description        String
    allocation_type    String
    vesting_conditions Json
    comments           String[]
}

// *** TRANSACTIONS *** // 

// ACCEPTANCE
model ConvertibleAcceptance {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_CONVERTIBLE_ACCEPTANCE")
    comments    String[]
    security_id String?
    date        String?
}

model EquityCompensationAcceptance {
    id          String                     @id @default(uuid()) @map("_id")
    object_type AcceptanceTransactionTypes
    comments    String[]
    security_id String?
    date        String?
}

model PlanSecurityAcceptance {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_PLAN_SECURITY_ACCEPTANCE")
    comments    String[]
    security_id String?
    date        String?
}

model StockAcceptance {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_STOCK_ACCEPTANCE")
    comments    String[]
    security_id String?
    date        String?
}

model WarrantAcceptance {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_WARRANT_ACCEPTANCE")
    comments    String[]
    security_id String?
    date        String?
}

// ISSUANCE
model ConvertibleIssuance {
    id                        String          @id @default(uuid()) @map("_id")
    object_type               String          @default("TX_CONVERTIBLE_ISSUANCE")
    investment_amount         Json
    convertible_type          String
    conversion_triggers       Json[]
    pro_rata                  String?
    seniority                 Int
    comments                  String[]
    security_id               String?
    date                      String?
    custom_id                 String?
    stakeholder_id            String?
    board_approval_date       String?
    stockholder_approval_date String?
    consideration_text        String?
    security_law_exemptions   Json[]
}

model EquityCompensationIssuance {
    id                           String                 @id @default(uuid()) @map("_id")
    object_type                  EquityCompensationType
    stock_plan_id                String?
    stock_class_id               String?
    compensation_type            String
    option_grant_type            String?
    quantity                     String
    exercise_price               Json?
    base_price                   Json?
    early_exercisable            Boolean?
    vesting_terms_id             String?
    expiration_date              String? // Making optional so that it's a Nullable String
    termination_exercise_windows Json
    comments                     String[]
    security_id                  String?
    date                         String?
    custom_id                    String?
    stakeholder_id               String?
    board_approval_date          String?
    stockholder_approval_date    String?
    consideration_text           String?
    security_law_exemptions      Json[]
}

model PlanSecurityIssuance {
    id                           String   @id @default(uuid()) @map("_id")
    object_type                  String   @default("TX_PLAN_SECURITY_ISSUANCE")
    stock_plan_id                String?
    stock_class_id               String?
    compensation_type            String
    option_grant_type            String?
    quantity                     String
    exercise_price               Json?
    base_price                   Json?
    early_exercisable            Boolean?
    vesting_terms_id             String?
    expiration_date              String? // Making optional so that it's a Nullable String
    termination_exercise_windows Json
    comments                     String[]
    security_id                  String?
    date                         String?
    custom_id                    String?
    stakeholder_id               String?
    board_approval_date          String?
    stockholder_approval_date    String?
    consideration_text           String?
    security_law_exemptions      Json[]
}

// This model is verified with optional and required fields, comments must remain to aid on-chain to off-chain translation.
model StockIssuance {
    id                        String             @id @default(uuid()) @map("_id")
    object_type               String             @default("TX_STOCK_ISSUANCE")
    stock_class_id            String
    stock_plan_id             String?
    share_numbers_issued      Json[] // Optional: NOT INCLUDED IN ISSUANCE CAP TABLE
    share_price               Json // Monetary JSON containing amount and currency
    quantity                  String // Numeric: Fixed-point string representation of a number (up to 10 decimal places supported)
    vesting_terms_id          String? 
    cost_basis                Json? // Monetary JSON containing amount and currency, original value purchased at from the company. 
    stock_legend_ids          String[] // Array of stock legends that are applicable to this stock, can be empty
    issuance_type             String? // Optional for special types (["RSA", "FOUNDERS_STOCK"],)
    comments                  String[]
    security_id               String
    date                      String // Dates are strings
    custom_id                 String? // unclear, Victor asking in discussions.
    stakeholder_id            String
    board_approval_date       String?
    stockholder_approval_date String?
    consideration_text        String?
    security_law_exemptions   Json[] // Can be empty
}

model WarrantIssuance {
    id                        String              @id @default(uuid()) @map("_id")
    object_type               String              @default("TX_WARRANT_ISSUANCE")
    quantity                  String?
    exercise_price            Json?
    purchase_price            Json
    exercise_triggers         Json[]
    warrant_expiration_date   String?
    vesting_terms_id          String?
    quantity_source           String?
    comments                  String[]
    security_id               String?
    date                      String?
    custom_id                 String?
    stakeholder_id            String?
    board_approval_date       String?
    stockholder_approval_date String?
    consideration_text        String?
    security_law_exemptions   Json[]
}

// CONVERSION
model ConvertibleConversion {
    id                        String   @id @default(uuid()) @map("_id")
    object_type               String   @default("TX_CONVERTIBLE_CONVERSION")
    reason_text               String
    quantity_converted        String?
    balance_security_id       String?
    trigger_id                String
    capitalization_definition Json?
    comments                  String[]
    security_id               String?
    date                      String?
    resulting_security_ids    String[]
}

model StockConversion {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_STOCK_CONVERSION")
    balance_security_id    String?
    quantity_converted     String
    comments               String[]
    security_id            String?
    date                   String?
    resulting_security_ids String[]
}

// VESTING
model VestingStart {
    id                   String   @id @default(uuid()) @map("_id")
    object_type          String   @default("TX_VESTING_START")
    vesting_condition_id String
    comments             String[]
    date                 String?
    security_id          String
}

model VestingEvent {
    id                   String   @id @default(uuid()) @map("_id")
    object_type          String   @default("TX_VESTING_EVENT")
    vesting_condition_id String
    comments             String[]
    date                 String?
    security_id          String
}

model VestingAcceleration {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_VESTING_ACCELERATION")
    quantity    String
    reason_text String
    comments    String[]
    date        String?
    security_id String
}

// CANCELLATION
model ConvertibleCancellation {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("TX_CONVERTIBLE_CANCELLATION")
    amount              Json
    comments            String[]
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model EquityCompensationCancellation {
    id                  String                       @id @default(uuid()) @map("_id")
    object_type         CancellationTransactionTypes
    quantity            String
    comments            String[]
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model PlanSecurityCancellation {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("TX_PLAN_SECURITY_CANCELLATION")
    comments            String[]
    security_id         String?
    date                String?
    quantity            String?
    balance_security_id String?
    reason_text         String?
}

model StockCancellation {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("TX_STOCK_CANCELLATION")
    quantity            String
    comments            String[]
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model WarrantCancellation {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("TX_WARRANT_CANCELLATION")
    quantity            String
    comments            String[]
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

// TRANSFER 
model ConvertibleTransfer {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_CONVERTIBLE_TRANSFER")
    amount                 Json
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    balance_security_id    String?
    resulting_security_ids String[]
}

model EquityCompensationTransfer {
    id                     String                         @id @default(uuid()) @map("_id")
    object_type            EquityCompensationTransferType
    quantity               String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    balance_security_id    String?
    resulting_security_ids String[]
}

model PlanSecurityTransfer {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_PLAN_SECURITY_TRANSFER")
    quantity               String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    balance_security_id    String?
    resulting_security_ids String[]
}

// This model is verified with optional and required fields, comments must remain to aid on-chain to off-chain translation.
model StockTransfer {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_STOCK_TRANSFER")
    quantity               String // Numeric: Fixed-point string representation of a number (up to 10 decimal places supported)
    comments               String[] // Optional to remain empty
    security_id            String // Transferor's security ID
    date                   String // Dates are strings in the schema
    consideration_text     String?
    balance_security_id    String?
    resulting_security_ids String[] // Not optional since it's the security ID of the Transferee, Bob can transfer to many people at once.
}

model WarrantTransfer {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_WARRANT_TRANSFER")
    quantity               String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    balance_security_id    String?
    resulting_security_ids String[]
}

// RELEASE
model EquityCompensationRelease {
    id                     String                        @id @default(uuid()) @map("_id")
    object_type            EquityCompensationReleaseType
    comments               String[]
    security_id            String?
    date                   String?
    settlement_date        String
    release_price          Json
    quantity               String
    consideration_text     String?
    resulting_security_ids String[]
}

model PlanSecurityRelease {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_PLAN_SECURITY_RELEASE")
    comments               String[]
    security_id            String?
    date                   String?
    settlement_date        String
    release_price          Json
    quantity               String
    consideration_text     String?
    resulting_security_ids String[]
}

// EXERCISE 
model EquityCompensationExercise {
    id                     String                         @id @default(uuid()) @map("_id")
    object_type            EquityCompensationExerciseType
    quantity               String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    resulting_security_ids String[]
}

model PlanSecurityExercise {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_PLAN_SECURITY_EXERCISE")
    quantity               String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    resulting_security_ids String[]
}

model WarrantExercise {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_PLAN_SECURITY_EXERCISE")
    trigger_id             String
    comments               String[]
    security_id            String?
    date                   String?
    consideration_text     String?
    resulting_security_ids String[]
}

// REISSUANCE
model StockReissuance {
    id                     String   @id @default(uuid()) @map("_id")
    object_type            String   @default("TX_STOCK_REISSUANCE")
    comments               String[]
    security_id            String?
    date                   String?
    resulting_security_ids String[]
    split_transaction_id   String?
    reason_text            String?
}

// REPURCHASE
model StockRepurchase {
    id                  String   @id @default(uuid()) @map("_id")
    object_type         String   @default("TX_STOCK_REPURCHASE")
    comments            String[]
    security_id         String?
    date                String
    price               Json
    quantity            String
    consideration_text  String?
    balance_security_id String?
}

// RETURN TO POOL
model StockPlanReturnToPool {
    id            String   @id @default(uuid()) @map("_id")
    object_type   String   @default("TX_STOCK_PLAN_RETURN_TO_POOL")
    comments      String[]
    security_id   String?
    date          String?
    reason_text   String
    quantity      String
    stock_plan_id String
}

// SPLIT
model StockClassSplit {
    id             String   @id @default(uuid()) @map("_id")
    object_type    String   @default("TX_STOCK_CLASS_SPLIT")
    comments       String[]
    date           String?
    stock_class_id String
    split_ratio    Json
}

// RETRACTION
model ConvertibleRetraction {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_CONVERTIBLE_RETRACTION")
    comments    String[]
    security_id String?
    date        String?
    reason_text String
}

model EquityCompensationRetraction {
    id          String                           @id @default(uuid()) @map("_id")
    object_type EquityCompensationRetractionType
    comments    String[]
    security_id String?
    date        String?
    reason_text String
}

model PlanSecurityRetraction {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_PLAN_SECURITY_RETRACTION")
    comments    String[]
    security_id String?
    date        String?
    reason_text String
}

model StockRetraction {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_STOCK_RETRACTION")
    comments    String[]
    security_id String?
    date        String?
    reason_text String
}

model WarrantRetraction {
    id          String   @id @default(uuid()) @map("_id")
    object_type String   @default("TX_WARRANT_RETRACTION")
    comments    String[]
    security_id String?
    date        String?
    reason_text String
}

// ADJUSTMENT
model IssuerAuthorizedSharesAdjustment {
    id                        String   @id @default(uuid()) @map("_id")
    object_type               String   @default("TX_WARRANT_RETRACTION")
    comments                  String[]
    date                      String?
    issuer_id                 String?
    new_shares_authorized     String
    board_approval_date       String?
    stockholder_approval_date String?
}

model StockClassAuthorizedSharesAdjustment {
    id                        String   @id @default(uuid()) @map("_id")
    object_type               String   @default("TX_STOCK_CLASS_AUTHORIZED_SHARES_ADJUSTMENT")
    comments                  String[]
    date                      String?
    stock_class_id            String?
    new_shares_authorized     String
    board_approval_date       String?
    stockholder_approval_date String?
}

model StockClassConversionRatioAdjustment {
    id                             String   @id @default(uuid()) @map("_id")
    object_type                    String   @default("TX_STOCK_CLASS_CONVERSION_RATIO_ADJUSTMENT")
    comments                       String[]
    date                           String?
    stock_class_id                 String?
    new_ratio_conversion_mechanism Json
}

model StockPlanPoolAdjustment {
    id                        String   @id @default(uuid()) @map("_id")
    object_type               String   @default("TX_STOCK_PLAN_POOL_ADJUSTMENT")
    comments                  String[]
    date                      String?
    stock_plan_id             String?
    board_approval_date       String?
    stockholder_approval_date String?
    shares_reserved           String
}

// *** ENUMS ***
// Transaction Types

// Acceptance
// Used in EquityCompensationAcceptance, may be extended
enum AcceptanceTransactionTypes {
    TX_PLAN_SECURITY_ACCEPTANCE
    TX_EQUITY_COMPENSATION_ACCEPTANCE
}

// Cancellation
enum CancellationTransactionTypes {
    TX_PLAN_SECURITY_CANCELLATION
    TX_EQUITY_COMPENSATION_CANCELLATION
}

// Issuance 
enum EquityCompensationType {
    TX_PLAN_SECURITY_ISSUANCE
    TX_EQUITY_COMPENSATION_ISSUANCE
}

// Transfer
enum EquityCompensationTransferType {
    TX_PLAN_SECURITY_TRANSFER
    TX_EQUITY_COMPENSATION_TRANSFER
}

// Release
enum EquityCompensationReleaseType {
    TX_PLAN_SECURITY_RELEASE
    TX_EQUITY_COMPENSATION_RELEASE
}

// Exercise
enum EquityCompensationExerciseType {
    TX_PLAN_SECURITY_EXERCISE
    TX_EQUITY_COMPENSATION_EXERCISE
}

// Retraction
enum EquityCompensationRetractionType {
    TX_PLAN_SECURITY_RETRACTION
    TX_EQUITY_COMPENSATION_RETRACTION
}
