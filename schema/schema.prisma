generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// * PRIMARY OBJECTS: Links to validation schemas live under ocf repo schema/objects
model Issuer {
    id                               String   @id @default(auto()) @map("_id") @db.ObjectId
    object_type                      String   @default("ISSUER")
    legal_name                       String
    dba                              String?
    formation_date                   String // OCF Date type is a string
    country_of_formation             String
    country_subdivision_of_formation String
    tax_ids                          String[]
    email                            String?
    phone                            String?
    address                          String?
    initial_shares_authorized        String?
    comments                         String?
}

model Stakeholder {
    id                   String                       @id @default(auto()) @map("_id") @db.ObjectId
    object_type          String                       @default("STAKEHOLDER")
    name                 Json
    stakeholder_type     StakeholderType
    issuer_assigned_id   String?
    current_relationship StakeholderRelationshipType?
    primary_contact      Json?
    contact_info         Json?
    comments             String?
}

model StockClass {
    id                              String         @id @default(auto()) @map("_id") @db.ObjectId
    object_type                     String         @default("STOCK_CLASS")
    name                            String
    class_type                      StockClassType
    default_id_prefix               String
    initial_shares_authorized       String // either AuthorizedSharesTypes or Numeric
    board_approval_date             String?
    votes_per_share                 String // Numeric
    par_value                       String? // Monetary
    price_per_share                 String? //  Monetary
    seniority                       String // Numeric;
    conversion_rights               String[] // TODO: later
    liquidation_preference_multiple String? // Numeric
    participation_cap_multiple      String? // Numeric
    comments                        String?
}

model StockLegendTemplate {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type String  @default("STOCK_LEGEND_TEMPLATE")
    name        String
    text        String
    comments    String?
}

model StockPlan {
    id                             String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type                    String  @default("STOCK_PLAN")
    plan_name                      String
    board_approval_date            String?
    stockholder_approval_date      String?
    initial_shares_reserved        String // TODO this will be either AuthorizedSharesTypes or Numeric
    default_cancellation_behaviour String?
    stock_class_id                 String  @db.ObjectId
    comments                       String?
}

model Valuations {
    id                  String        @id @default(auto()) @map("_id") @db.ObjectId
    object_type         String        @default("VALUATION")
    provider            String?
    board_approval_date String?
    price_per_share     String // TODO: Monetary
    effective_date      String
    stock_class_id      String        @db.ObjectId
    valuation_type      ValuationType
    comments            String?
}

model VestingTerms {
    id                 String         @id @default(auto()) @map("_id") @db.ObjectId
    object_type        String         @default("VESTING_TERMS")
    name               String
    description        String
    allocation_type    AllocationType
    vesting_conditions String[] // TODO: VestingConditions array for a later date.
    comments           String?
}

// *** TRANSACTIONS *** // 

// ISSUANCE
model StockIssuance {
    id                      String             @id @default(auto()) @map("_id") @db.ObjectId
    object_type             String             @default("TX_STOCK_ISSUANCE")
    stock_class_id          String             @db.ObjectId
    stock_plan_id           String?            @db.ObjectId
    share_numbers_issued    String[] // TODO: ShareNumberRange, also look up prisma optional arrays
    share_price             String // TODO: Monetary
    quantity                String // TODO: Numeric 
    vesting_terms_id        String?            @db.ObjectId
    cost_basis              String? // TODO: Monetary
    stock_legend_ids        String[]           @db.ObjectId
    issuance_type           StockIssuanceType?
    comments                String?
    security_id             String?
    date                    String?
    custom_id               String?
    stakeholder_id          String?            @db.ObjectId
    board_approval_date     String?
    consideration_text      String?
    security_law_exemptions String?
}

model ConvertibleIssuance {
    id                      String          @id @default(auto()) @map("_id") @db.ObjectId
    object_type             String          @default("TX_CONVERTIBLE_ISSUANCE")
    investment_amount       String // TODO: Monetary
    convertible_type        ConvertibleType
    conversion_triggers     String[] // TODO: Conversion triggers array
    pro_rata                String? // TODO: Numeric
    seniority               Int
    comments                String?
    security_id             String?
    date                    String?
    custom_id               String?
    stakeholder_id          String?
    board_approval_date     String?
    consideration_text      String?
    security_law_exemptions String?
}

model EquityCompensationIssuance {
    id                           String                 @id @default(auto()) @map("_id") @db.ObjectId
    object_type                  EquityCompensationType
    stock_plan_id                String?                @db.ObjectId
    stock_class_id               String?                @db.ObjectId
    compensation_type            String // TODO: CompensationType schema
    option_grant_type            String? // TODO: OptionGrant schema
    quantity                     String // TODO: Numeric
    exercise_price               String? // TODO: Monetary
    base_price                   String? // TODO: Monetary
    early_exercisable            Boolean?
    vesting_terms_id             String?                @db.ObjectId
    expiration_date              String // TODO: Nullable Date Custom Type
    termination_exercise_windows String // TODO: TerminationWindow schema
    comments                     String?
    security_id                  String?
    date                         String?
    custom_id                    String?
    stakeholder_id               String?
    board_approval_date          String?
    stockholder_approval_date    String?
    consideration_text           String?
    security_law_exemptions      String?
}

model PlanSecurityIssuance {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    object_type String @default("TX_PLAN_SECURITY_ISSUANCE")
}

model WarrantIssuance {
    id                        String             @id @default(auto()) @map("_id") @db.ObjectId
    object_type               String             @default("TX_WARRANT_ISSUANCE")
    quantity                  String? // TODO: Numeric
    exercise_price            String? // TODO: Monetary
    purchase_price            String // TODO: Monetary
    exercise_triggers         String[] // TODO: Exercise triggers array
    warrant_expiration_date   String? // TODO: Date schema
    vesting_terms_id          String?
    quantity_source           QuantitySourceType
    comments                  String?
    security_id               String?
    date                      String?
    custom_id                 String?
    stakeholder_id            String?
    board_approval_date       String?
    stockholder_approval_date String?
    consideration_text        String?
    security_law_exemptions   String?
}

// ACCEPTANCE
model StockAcceptance {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type String  @default("TX_STOCK_ACCEPTANCE")
    comments    String?
    security_id String?
    date        String?
}

model ConvertibleAcceptance {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type String  @default("TX_CONVERTIBLE_ACCEPTANCE")
    comments    String?
    security_id String?
    date        String?
}

model PlanSecurityAcceptance {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    object_type String @default("TX_PLAN_SECURITY_ACCEPTANCE")
}

model EquityCompensationAcceptance {
    id          String                     @id @default(auto()) @map("_id") @db.ObjectId
    object_type AcceptanceTransactionTypes
    comments    String?
    security_id String?
    date        String?
}

model WarrantyAcceptance {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type String  @default("TX_WARRANT_ACCEPTANCE")
    comments    String?
    security_id String?
    date        String?
}

// VESTING
model VestingStart {
    id                   String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type          String  @default("TX_VESTING_START")
    vesting_condition_id String // TODO: Reference to the `id` of a VestingCondition in this security's VestingTerms. This condition should have a trigger type of `VESTING_START_DATE`.
    comments             String?
    date                 String?
    security_id          String?
}

model VestingEvent {
    id                   String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type          String  @default("TX_VESTING_EVENT")
    vesting_condition_id String // TODO: Reference to the `id` of a VestingCondition in this security's VestingTerms. This condition should have a trigger type of `VESTING_START_DATE`.
    comments             String?
    date                 String?
    security_id          String?
}

model VestingAcceleration {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type String  @default("TX_VESTING_ACCELERATION")
    quantity    String // TODO: Numeric
    reason_text String
    comments    String?
    date        String?
    security_id String?
}

// CANCELLATION
model ConvertibleCancellation {
    id                  String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type         String  @default("TX_CONVERTIBLE_CANCELLATION")
    amount              String // TODO: Monetary
    comments            String?
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model EquityCompensationCancellation {
    id                  String                       @id @default(auto()) @map("_id") @db.ObjectId
    object_type         CancellationTransactionTypes
    quantity            String // TODO: Numeric
    comments            String?
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model PlanSecurityCancellation {
    id          String @id @default(auto()) @map("_id") @db.ObjectId
    object_type String @default("TX_PLAN_SECURITY_CANCELLATION")
}

model StockCancellation {
    id                  String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type         String  @default("TX_STOCK_CANCELLATION")
    quantity            String // TODO: Numeric
    comments            String?
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

model WarrantCancellation {
    id                  String  @id @default(auto()) @map("_id") @db.ObjectId
    object_type         String  @default("TX_WARRANT_CANCELLATION")
    quantity            String // TODO: Numeric
    security_id         String?
    date                String?
    balance_security_id String?
    reason_text         String?
}

// CONVERSION

// *** ENUMS ***
enum StockClassType {
    PREFERRED
    COMMON
}

// Should be 409A, but prisma doesn't supoort enum staring with number values
// OCF will be supporting different types of valuations in future versions
enum ValuationType {
    CODE_409A
}

enum ConvertibleType {
    NOTE
    SAFE
    CONVERTIBLE_SECURITY
}

enum QuantitySourceType {
    HUMAN_ESTIMATED
    MACHINE_ESTIMATED
    UNSPECIFIED
    INSTRUMENT_FIXED
    INSTRUMENT_MAX
    INSTRUMENT_MIN
}

enum AuthorizedSharesTypes {
    NOT_APPLICABLE
    UNLIMITED
}

enum StockPlanCancellationBehaviorType {
    RETURN_TO_POOL
    CANCEL
}

enum AllocationType {
    CUMULATIVE_ROUNDING
    CUMULATIVE_ROUND_DOWN
    FRONT_LOADED
    BACK_LOADED
    FRONT_LOADED_TO_SINGLE_TRANCHE
    BACK_LOADED_TO_SINGLE_TRANCHE
    FRACTIONAL
}

enum AddressType {
    LEGAL
    CONTACT
    OTHER
}

enum EmailType {
    PERSONAL
    BUSINESS
    OTHER
}

enum PhoneType {
    MOBILE
    HOME
    BUSINESS
}

enum StakeholderType {
    INDIVIDUAL
    INSTITUTION
}

enum StakeholderRelationshipType {
    ADVISOR
    BOARD_MEMBER
    CONSULTANT
    EMPLOYEE
    EX_ADVISOR
    EX_CONSULTANT
    EX_EMPLOYEE
    EXECUTIVE
    FOUNDER
    INVESTOR
    NON_US_EMPLOYEE
    OFFICER
    OTHER
}

enum StockIssuanceType {
    RSA
    FOUNDER_STOCK
}

// Transaction Types

// Acceptance
// Used in EquityCompensationAcceptance, may be extended
enum AcceptanceTransactionTypes {
    TX_PLAN_SECURITY_ACCEPTANCE
    TX_EQUITY_COMPENSATION_ACCEPTANCE
}

// Cancellation
enum CancellationTransactionTypes {
    TX_PLAN_SECURITY_CANCELLATION
    TX_EQUITY_COMPENSATION_CANCELLATION
}

// Issuance 
enum EquityCompensationType {
    TX_PLAN_SECURITY_ISSUANCE
    TX_EQUITY_COMPENSATION_ISSUANCE
}
